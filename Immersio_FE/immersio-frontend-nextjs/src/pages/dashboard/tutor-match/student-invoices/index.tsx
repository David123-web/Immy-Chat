import DashboardRoute from '@/components/routes/DashboardRoute';
import { TutorInvoiceMode } from '@/src/interfaces/tutorMatch/tutorMatch.interface';
import { withTranslationsProps } from '@/src/next/with-app';
import { BellOutlined, DeleteOutlined, DownloadOutlined, MailOutlined } from '@ant-design/icons';
import { Button, Table } from 'antd';
import { ColumnsType } from 'antd/lib/table';
import Head from 'next/head';
import Image from 'next/image';

// EXTEND TUTOR INVOICES

type StudentInvoice = {
	status: boolean; //enum
	invoice: string;
	invoiceDate: string;
	// family: string;
	student: string;
	dateRange: string;
	mode: TutorInvoiceMode; // enum;
	amount: number;
};

const Page = () => {
	const dataSource: StudentInvoice[] = [
		{
			student: 'Michell Wong',
			amount: 1000,
			dateRange: '2023-06-18 - 2023-07-20',
			status: true,
			mode: TutorInvoiceMode.Class,
			invoice: '23-1234',
			invoiceDate: '2023-06-18',
		},
		{
			student: 'Michell Wong',
			amount: 1000,
			dateRange: '2023-06-18 - 2023-07-20',
			status: false,
			mode: TutorInvoiceMode.Manual,
			invoice: '23-1234',
			invoiceDate: '2023-06-18',
		},
		{
			student: 'Michell Wong',
			amount: 1000,
			dateRange: '2023-06-18 - 2023-07-20',
			status: false,
			mode: TutorInvoiceMode.Period,
			invoice: '23-1234',
			invoiceDate: '2023-06-18',
		},
	];

	const columns: ColumnsType<StudentInvoice> = [
		{
			title: 'Status',
			dataIndex: 'status',
			key: 'status',
			render: (_, record) =>
				record.status ? (
					<div className="tw-flex tw-items-center tw-gap-x-1">
						<Button
							icon={
								<MailOutlined
									style={{
										fontSize: 16,
									}}
								/>
							}
							className="bg-theme-3 !tw-text-white !tw-border-none"
						/>
						<Button
							icon={
								<BellOutlined
									style={{
										fontSize: 16,
									}}
								/>
							}
							className="!tw-bg-deleteIconDavid !tw-text-white !tw-border-none"
						/>
					</div>
				) : (
					<Image src="/assets/img/ios-cash.svg" alt="cash" width={30} height={16} />
				),
		},
		{
			title: 'Invoice #',
			dataIndex: 'invoice',
			key: 'invoice',
		},
		{
			title: 'Invoice date',
			dataIndex: 'invoiceDate',
			key: 'invoiceDate',
		},
		{
			title: 'Student',
			dataIndex: 'student',
			key: 'student',
		},
		{
			title: 'Date range',
			dataIndex: 'dateRange',
			key: 'dateRange',
		},
		{
			title: 'Mode',
			dataIndex: 'mode',
			key: 'mode',
		},
		{
			title: 'Amount',
			dataIndex: 'amount',
			key: 'amount',
		},
		{
			title: 'Action',
			dataIndex: 'action',
			key: 'action',
			render: () => (
				<div className="tw-flex tw-items-center tw-gap-1">
					<Button
						icon={
							<MailOutlined
								style={{
									fontSize: 16,
								}}
							/>
						}
						className="bg-theme-3 !tw-text-white !tw-border-none"
					/>
					<Button
						icon={
							<DeleteOutlined
								style={{
									fontSize: 16,
								}}
							/>
						}
						className="!tw-bg-deleteIconDavid !tw-text-white !tw-border-none"
						onClick={(e) => {
							// showDeleteConfirm(item.id);
						}}
					/>
					<Button
						icon={
							<DownloadOutlined
								style={{
									fontSize: 16,
								}}
							/>
						}
						className="bg-theme-3 !tw-text-white !tw-border-none"
						onClick={(e) => {
							// showDeleteConfirm(item.id);
						}}
					/>
				</div>
			),
		},
	];

	return (
		<DashboardRoute>
			<Head>
				<title>Student Invoices</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<Table dataSource={dataSource} columns={columns} />
		</DashboardRoute>
	);
};

export async function getServerSideProps(ctx) {
  return await withTranslationsProps(ctx)
}

export default Page;
