import HeaderTable from '@/components/common/HeaderTable';
import DashboardRoute from '@/components/routes/DashboardRoute';
import { useQuery } from '@/hooks/useQuery';
import { Course, IGetListPaidCoursesResponse } from '@/src/interfaces/course/course.interface';
import { withTranslationsProps } from '@/src/next/with-app';
import { getListPaidCourses } from '@/src/services/courses/apiCourses';
import { useMobXStores } from '@/src/stores';
import { EditOutlined } from '@ant-design/icons';
import { Button, Table } from 'antd';
import { ColumnsType } from 'antd/lib/table';
import { observer } from 'mobx-react-lite';
import Head from 'next/head';
import { useState } from 'react';
import { toast } from 'react-toastify';

const Page = () => {
	const { globalStore } = useMobXStores();
	const columns: ColumnsType<IGetListPaidCoursesResponse> = [
		{
			title: 'Course Title',
			dataIndex: 'title',
			key: 'title',
		},
		{
			title: 'Price',
			dataIndex: 'price',
			key: 'price',
			render: (value) => {
				return `${value} ${globalStore.currencySubdomain}`;
			},
		},
		{
			title: 'Action',
			dataIndex: 'action',
			key: 'action',
			render: () => (
				<div className="tw-flex tw-items-center tw-gap-1">
					<Button
						icon={
							<EditOutlined
								style={{
									fontSize: 16,
								}}
							/>
						}
						className="bg-theme-4 color-theme-7 !tw-border-none"
					/>
				</div>
			),
		},
	];
	/* ------------------------------- GET CREDIT ------------------------------- */
	const [listCoursesPaid, setListCoursesPaid] = useState<IGetListPaidCoursesResponse[]>([]);
	const { isLoading } = useQuery<IGetListPaidCoursesResponse[]>(
		['IGetListPaidCoursesResponse'],
		() => getListPaidCourses({}), // TODO implement pagination and search
		{
			onSuccess: (res) => {
				setListCoursesPaid(res.data);
			},
			onError: (err) => {
				toast.error(err.data?.message);
			},
		}
	);
	return (
		<DashboardRoute>
			<Head>
				<title>Paid Courses</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<HeaderTable tableName={'Paid Courses'} />
			<Table
				loading={isLoading}
				bordered
				dataSource={listCoursesPaid}
				columns={columns}
				// pagination={{
				// 	hideOnSinglePage: true,
				// }}
			/>
		</DashboardRoute>
	);
};

export async function getServerSideProps(ctx) {
	return await withTranslationsProps(ctx);
}

export default observer(Page);
